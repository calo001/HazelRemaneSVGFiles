import com.vector.svg2vectorandroid.SvgFilesProcessor
import java.io.File
import java.util.*

fun main() {
    val originTestDir = "src/main/resources/test-dir"
    val originDir = "src/main/resources/openmoji-svg-color"
    val renamedDir = "src/main/resources/openmoji_renamed"
    val resultDir = "src/main/resources/openmoji_android"

    File(originDir).listFiles().forEachIndexed { index, file ->
        val newName = file.name
            .toLowerCase((Locale.getDefault()))
            .replace("-", "_")

        if (File(resultDir).exists()) {
            File(resultDir).deleteRecursively()
            File(resultDir).mkdirs()
        }

        if (newName in usedNames()) {
            file.copyTo(
                target = File("$renamedDir/openmoji_$newName"),
                overwrite = true
            )
            println("${index + 1} Copied: ${file.name}")
        }
    }

    SvgFilesProcessor(renamedDir, resultDir, "xml", "").process()
}

fun usedNames(): List<String> {
    return (listOf(
        "1F647",
        "1F648",
        "1F648",
        "1F648",
        "1F649",
        "1F650",
        "1F651",
        "2764-FE0F-200D-1FA79",
        "2764-FE0F-200D-1FA80",
        "2764-FE0F-200D-1FA81",
        "2764-FE0F-200D-1FA82",
        "2764-FE0F-200D-1FA83",
        "2753",
        "2753",
        "2753",
        "2753",
        "2753",
        "1F919",
        "1F920",
        "1F921",
        "1F922",
        "1F923",
        "1F44B",
        "1F44B",
        "1F44B",
        "1F44B",
        "1F44B",
        "1F44B",
        "1F94A",
        "1F9B8",
        "1F3C1",
        "2935",
        "1FA9D",
        "1F6B6-200D-2642-FE0F",
        "1F4C9",
        "2702",
        "E345",
        "1F3CA-200D-2640-FE0F",
        "1F58D",
        "1F37D",
        "1F342",
        "1F93C",
        "1F381",
        "1FAB4",
        "1F442",
        "1F3CC",
        "1F915",
        "1FA96",
        "E201",
        "2692",
        "1F91D",
        "1F4B8",
        "1F4DA",
        "1F6B5-200D-2642-FE0F",
        "1F440",
        "1F4E8",
        "1F469-200D-1F3A4",
        "1F9D1-200D-1F3EB",
        "1F914",
        "1F6AE",
        "23F0",
        "1F3C6",
        "270D",
        "1F91D",
        "1F3C6",
        "E25F",
        "1F929",
        "1F613",
        "E182",
        "1F481-200D-2640-FE0F",
        "1F91D",
        "E082",
        "1F4F0",
        "1F914",
        "2705",
        "1F9C1",
        "1F97A",
        "1F64B",
        "1F958",
        "1F4B0",
        "260E",
        "2B8F",
        "1FAA4",
        "1F92B",
        "E2C2",
        "1F483",
        "1F4E6",
        "1FA99",
        "1F468-200D-1F527",
        "1F917",
        "1F35F",
        "1F5C3",
        "1F44B",
        "1F92C",
        "E083",
        "1F305",
        "1F50D",
        "26D4",
        "1F61C",
        "1F3C2",
        "1F9B6",
        "1F618",
        "1F606",
        "1F44D",
        "1F470-200D-2640-FE0F",
        "1F4D0",
        "E103",
        "E283",
        "1F4D6",
        "1F58C",
        "1F697",
        "26BD",
        "263A",
        "21A9",
        "E0B2",
        "E10C",
        "1F6AC",
        "1F634",
        "1F4AC",
        "1F64F",
        "1F9ED",
        "1F392",
        "1F6B6-200D-2640-FE0F",
        "1F97A",
        "26A0",
        "1F5EF",
        "1F1E6-1F1F7",
        "1F1E6-1F1F9",
        "1F1E7-1F1FE",
        "1F1E7-1F1EA",
        "1F1E7-1F1F7",
        "1F1E7-1F1EC",
        "1F1E8-1F1E6",
        "1F1E8-1F1FF",
        "1F1E9-1F1F0",
        "1F1F8-1F1FB",
        "1F1EA-1F1EA",
        "1F1EB-1F1EE",
        "1F1EB-1F1F7",
        "1F1E9-1F1EA",
        "1F1EC-1F1F7",
        "1F1ED-1F1FA",
        "1F1EE-1F1F9",
        "1F1F1-1F1FB",
        "1F1F1-1F1F9",
        "1F1F2-1F1FD",
        "1F1F3-1F1F1",
        "1F1F3-1F1F4",
        "1F1F5-1F1F1",
        "1F1F7-1F1F4",
        "1F1F7-1F1FA",
        "1F3F4-E0067-E0062-E0073-E0063-E0074-E007F",
        "1F1F8-1F1F0",
        "1F1EA-1F1F8",
        "1F1F8-1F1EA",
        "1F1E8-1F1ED",
        "1F1FA-1F1F8",
        "1F1FA-1F1E6",
        "1F1EC-1F1E7",
        "1F3F4-E0067-E0062-E0077-E006C-E0073-E007F",
        "1F408",
        "1F43F",
        "1F404",
        "1F415",
        "1F418",
        "1F98A",
        "1F98D",
        "1F994",
        "1F40E",
        "1F981",
        "1F412",
        "1F9A7",
        "1F9A6",
        "1F416",
        "1F99D",
        "1F405",
        "1F983",
        "1F43A",
        "1f50d",
        "2b21_fe0f_200d_1f308",
        "1f638",
        "1f93e_200d_2640_fe0f",
        "1f939_200d_2642_fe0f",
        "1f5fa",
        "2b21_fe0f_200d_1f308",
        "1f50d",
        "2b21_fe0f_200d_1f308",
        "1f93e_200d_2640_fe0f",
        "1f939_200d_2642_fe0f",
        "1f5fa",
        "1f638",
        "1f50d",
        "1f468_200d_1f469_200d_1f467_200d_1f466",
    ) + listOf( // weather
        "2600",
        "1F324",
        "26C5",
        "1F32B",
        "1F636-200D-1F32B-FE0F",
        "1F325",
        "2601",
        "E20E",
        "1F301",
        "2614",
        "1F327",
        "1F326",
        "26A1",
        "1F329",
        "2600 && 1F329",
        "2614",
        "2744",
        "1F328",
        "2600 && 1F328",
        "2744",
        "1F328",
        "1F9CA",
        "1F4A6",
        "1F976",
        "1F328",
        "1F975",
        "E2C0",
        "1F32C",
        "1F3F3-FE0F-200D-1F7E6",
        "1F3F3-FE0F-200D-1F7E6 && 1F324",
        "26C5",
        "1F32B",
        "1F391",
        "1F325",
        "1F3F3-FE0F-200D-1F7E6 && 1F328",
        "1F3F3-FE0F-200D-1F7E6 && 1F329",
        "1F329",
        "1F328",
        "2603",
        "1F33B",
        "1F341",
        "1F3D6",
        "1F4F8",
    )).map { it.toLowerCase((Locale.getDefault()))
        .replace("-", "_") + ".svg"
    }
}
